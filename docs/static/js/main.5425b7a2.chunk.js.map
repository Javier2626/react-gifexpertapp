{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","seState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAUaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAAoB,EAEXC,mBAAS,IAFE,mBAExCC,EAFwC,KAE5BC,EAF4B,KA4B/C,OACI,sBAAMC,SApBW,SAACC,GAClBA,EAAEC,iBASGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SAGI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SA/BkB,SAAEP,GAExBF,EAAeE,EAAEQ,OAAOF,a,+BCXjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGfC,EAHe,iDAGiCC,UAAWH,GAH5C,+DAKFI,MAAOF,GALL,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZrB,kBAgBdM,GAhBc,4CAAH,sDCFLO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAOrC,OACI,sBAAKc,UAAU,yCAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCTCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECEZ,SAAEA,GAAe,IAAD,EAEhBd,mBAAS,CAC9BqB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAoCzC,OA3BAC,qBAAU,WAENxB,EAASC,GACRwB,MAAM,SAAAC,GAKHH,EAAQ,CACJf,KAAMkB,EACNL,SAAS,SAKlB,CAACpB,IAYGqB,ED7ByBK,CAAe1B,GAAlCa,EATwB,EAS9BN,KAAca,EATgB,EAShBA,QAmCrB,OACI,qCACA,oBAAIJ,UAAU,mCAAd,SAAmDhB,IAEjDoB,GAAW,wCAGb,qBAAKJ,UAAU,YAAf,SAIIH,EAAOJ,KAAM,SAAAC,GAAG,OAIZ,aAHJ,CAGK,EAAD,eAGKA,GAFCA,EAAIC,aE7DbgB,EAAe,WAAM,MAIMzC,mBAAS,CAAC,cAJhB,mBAIvB0C,EAJuB,KAIX3C,EAJW,KAiB9B,OACI,qCACA,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAI7B,uBAIA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAGpB,aAH6B,CAG5B,EAAD,CAEAA,SAAWA,GADLA,Y,MChC1B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5425b7a2.chunk.js","sourcesContent":["\r\n\r\n//rafc + tab\r\nimport React, { useState } from 'react'\r\n\r\n\r\n//TAREA2 SetCat sea una funcion requeri \r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('');//()undefind,''string vacio\r\n\r\n    const handleInputChange = ( e ) => {\r\n        // console.log(e.target.value);\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // console.log('Submit hecho') // para TAREA setcategories props\r\n        \r\n        //TAREA\r\n        // setCategories( cats =>[...cats, inputValue]);\r\n        \r\n\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue, ...cats ]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            {/* <h1>{ inputValue }</h1> */}\r\n            {/* <h2>Add Category</h2> */}\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n            \r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n\r\n  //ejecutar codigo de manera condicional, evita bucle infinito \r\n  export const getGifs = async( category ) => { // regresa un promea que resuelve\r\n\r\n    // const url ='https://api.giphy.com/v1/gifs/search?q=Rick+and+Morty&limit=10&api_key=JOZ2yqcEFystvxZcJ6k1fYSQtUt7ymdp'\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=JOZ2yqcEFystvxZcJ6k1fYSQtUt7ymdp`;\r\n\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n    // console.log(gifs);\r\n    // setImages( gifs );\r\n\r\n}","import React from 'react'\r\n\r\n// export const GifGridItem = ( props ) => {  //FORMA 2\r\n    export const GifGridItem = ( {title, url} ) => {\r\n\r\n    // console.log(props);    //FORMA 2\r\n\r\n    // console.log({id, title, url});\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* { img.title } */}\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    // const [count, setCount] = useState(0);\r\n\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n    \r\n    const {data: images, loading} = useFetchGifts( category ); // mismo useeffect disparar peticion, unicamnete si categoria camibe \r\n    \r\n\r\n    // useEffect ( () => {\r\n    //     // getGifs();\r\n    //     getGifs( category ) // retona una prome\r\n    //     .then( setImages );\r\n    // }, [ category ]) //arreglo vacio, solo ejectura cuando es rederizado una vez\r\n\r\n\r\n\r\n    // //ejecutar codigo de manera condicional, evita bucle infinito \r\n    // const getGifs = async() => {\r\n\r\n    //     // const url ='https://api.giphy.com/v1/gifs/search?q=Rick+and+Morty&limit=10&api_key=JOZ2yqcEFystvxZcJ6k1fYSQtUt7ymdp'\r\n    //     const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=JOZ2yqcEFystvxZcJ6k1fYSQtUt7ymdp`;\r\n\r\n    //     const resp = await fetch( url );\r\n    //     const { data } = await resp.json();\r\n\r\n    //     const gifs = data.map( img => {\r\n    //         return { \r\n    //             id: img.id,\r\n    //             title: img.title,\r\n    //             url: img.images?.downsized_medium.url\r\n    //         }\r\n    //     })\r\n\r\n    //     console.log(gifs);\r\n    //     setImages( gifs );\r\n\r\n    // }\r\n    \r\n    // getGifs();\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__flash\">{ category }</h3>\r\n\r\n        { loading && <p>Loading</p>}\r\n\r\n\r\n        <div className=\"card-grid\">\r\n              \r\n           \r\n            { \r\n            images.map ( img => (\r\n            // images.map ( ({ id, title }) => (\r\n            //     <li key={ id }> { title } </li>\r\n                \r\n                <GifGridItem\r\n                key={ img.id }\r\n                // img={ img }\r\n                { ...img } \r\n                />\r\n            ))\r\n            } \r\n            </div>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n// use significa que es un hook, todos comienzan, son funciones\r\n\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, seState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n       \r\n        getGifs( category )\r\n        .then( imgs => {\r\n\r\n            // setTimeout( () =>{\r\n                // console.log(imgs);\r\n\r\n            seState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        // },3000);\r\n    })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    // setTimeout( () => {\r\n    //     seState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000 );\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n    \r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    \r\n    // // TAREA agregar nuevo elemento\r\n    // const handleAdd = () =>{\r\n    //     // 'HunterXHunter'\r\n    //     // categories.push('HunterXHunter'); // NO USAR\r\n    //     //         console.log( categories );\r\n\r\n    //     // setCategories( ['HunterXHunter', ...categories ]);\r\n    //     setCategories( cats =>[...cats, 'HunterXHunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        <AddCategory setCategories={ setCategories }/>\r\n        {/* <AddCategory /> */}\r\n         {/* obliga que set categories sea obligatorio */}\r\n\r\n        <hr />\r\n\r\n        {/* <button onClick={ handleAdd}>Agregar</button> */}\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => (    //ERROR {} CAMBIO ()\r\n                    // return <li key={ category }> { category }</li>\r\n                        \r\n                    <GifGrid\r\n                    key={ category }\r\n                    category={ category }\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n//GifExpertApp\n//<h2>GifExpertApp</h2>\n// <hr />\n\n"],"sourceRoot":""}